plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	/*
	The dependency format is as follows: curse.maven:<descriptor>-<projectid>:<fileid>
	aka 'curse.maven:descriptor-projectid:fileid'
    curse.maven -> Required. Marks the dependency to be resolved by the curse maven website.
    <descriptor> -> Can be anything you want. This file downloaded will have this in it's name, so it's good to use this to show which files are what. A good practice would be to have this as the project slug.
    <projectid> -> The project id of the file you want to add as a dependency.
    <fileid> -> The file id of the file you want to add as a dependency.
 */
//	maven {	url "https://cursemaven.com"}
//	maven { url "https://maven.shedaniel.me/" }
//	maven { url 'https://jitpack.io' }

	/*
	Fabric maven usage!
	Maven group: The Maven group for all artifacts on the Maven will always be maven.modrinth.
	Module: The archive name will be the slug or project ID of the project in question.
	For example, with Sodium, you can use either sodium or AANobbMI.
	Module version: The version will be the version number or ID. This can be found on the version page itself.
	For example, with Sodium 0.4.4, you can use either mc1.19.2-0.4.4 or rAfhHfow.

	- modLocalRuntime "maven.modrinth:sodium:mc1.19.2-0.4.4"
	- modApi include("maven.modrinth:trinkets:3.4.0")
	 */
//	maven { url = "https://api.modrinth.com/maven" }
//
//	maven {
//		name = 'Ladysnake Mods'
//		url = 'https://maven.ladysnake.org/releases'
//	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

//	// jade mod
////	modImplementation "curse.maven:jade-324717:4328558"
////
////	// mod menu mod
////	modApi "maven.modrinth:modmenu:4.1.2"

	// origins mod
//	modImplementation "com.github.eggohito:origins-fabric:1.7.1"

//	modImplementation "com.github.apace100:apoli:2.9.0"
//	modImplementation "com.github.apace100:calio:1.7.0"
//	modImplementation "curse.maven:playerabilitylib-359522:3800599"
//	modApi "dev.onyxstudios.cardinal-components-api:cardinal-components-base:5.0.2"
//	modApi "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:5.0.2"
//	modImplementation "curse.maven:clothconfig-348521:4633414"


	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}